// 写一个函数peak寻找一个数组的峰值位置。 比如数组: 1,3,5,7,4,2有峰值7；已排序数组1,2,3,4,5,6，有峰值6。有的数组有多个峰值，这里只需要返回第一个。比如数组[1,2,3,2,7,6]有两个峰值3和7。

// 如果一个元素左右元素都相同，那么这个元素就是峰值，比如数组1,1,1,1，每个元素都是峰值。

// 例如

// peak([1,2,3,4,5,6])  // 5(6所在的位置）
// peak([1,3,5,7,4,2]) // 3（7所在的位置）
// peak([1,2,3,2,7,6]) // 2(3所在的位置)
// peak([1,1,1,1,1,1]) // 任何一个都是峰值
// 如果有多个峰值，只要随便返回一个就可以，不需要考虑顺序。

const peak = (arr) => {
    if(arr.length === 1) return 0
    for(let i = 0 , l = arr.length; i < l ; i ++){
        if((i == 0 && arr[i] > arr[i+1]) || (arr[i-1]<=arr[i] && arr[i] >= arr[i+1]) || (i == l-1 && arr[i] > arr[i-1])) {
            return i
        }
    }
}

console.log(peak([1,2,3,4,5,6]))  // 5(6所在的位置）
console.log(peak([1,3,5,7,4,2])) // 3（7所在的位置）
console.log(peak([1,2,3,2,7,6])) // 2(3所在的位置)
console.log(peak([1,1,1,1,1,1])) // 任何一个都是峰值